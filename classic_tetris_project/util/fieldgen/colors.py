# raw binary of the relevant section of the rom
COLOR_TABLE = [
    0x0F, 0x30, 0x21, 0x12, 0x0F, 0x30, 0x29, 0x1A,
    0x0F, 0x30, 0x24, 0x14, 0x0F, 0x30, 0x2A, 0x12,
    0x0F, 0x30, 0x2B, 0x15, 0x0F, 0x30, 0x22, 0x2B,
    0x0F, 0x30, 0x00, 0x16, 0x0F, 0x30, 0x05, 0x13,
    0x0F, 0x30, 0x16, 0x12, 0x0F, 0x30, 0x27, 0x16,
    0x60, 0xE6, 0x69, 0xA5, 0x69, 0xC9, 0x14, 0x30,
    0x04, 0xA9, 0x20, 0x85, 0x69, 0xE6, 0x89, 0xA5,
    0x89, 0xC9, 0x14, 0x30, 0x04, 0xA9, 0x20, 0x85,
    0x89, 0x60, 0xA5, 0x49, 0xC9, 0x20, 0x30, 0x56,
    0xA5, 0xBE, 0xC9, 0x01, 0xF0, 0x20, 0xA5, 0xA4,
    0xC9, 0x00, 0xD0, 0x0E, 0xE6, 0xA4, 0xA5, 0xB7,
    0x85, 0xA5, 0x20, 0xEB, 0x98, 0x85, 0xA6, 0x4C,
    0xEA, 0x98, 0xA5, 0xA5, 0xC5, 0xB7, 0xD0, 0x36,
    0xA5, 0xA4, 0xC9, 0x1C, 0xD0, 0x30, 0xA9, 0x00,
    0x85, 0xA4, 0x85, 0x45, 0x85, 0x41, 0xA9, 0x01,
    0x85, 0x48, 0xA9, 0x05, 0x85, 0x40, 0xA6, 0xBF,
    0xBD, 0x56, 0x99, 0x85, 0x42, 0x20, 0x69, 0x99,
    0xA5, 0xBE, 0xC9, 0x01, 0xF0, 0x07, 0xA5, 0xA6,
    0x85, 0xBF, 0x4C, 0xE6, 0x98, 0x20, 0xEB, 0x98,
    0x85, 0xBF, 0xA9, 0x00, 0x85, 0x4E, 0x60, 0xA5,
    0xC0, 0xC9, 0x05, 0xD0, 0x12, 0xA6, 0xD3, 0xE6,
    0xD3, 0xBD, 0x00, 0xDF, 0x4A, 0x4A, 0x4A, 0x4A,
    0x29, 0x07, 0xAA, 0xBD, 0x4E, 0x99, 0x60, 0x20,
    0x07, 0x99, 0x60, 0xE6, 0x1A, 0xA5, 0x17, 0x18,
    0x65, 0x1A, 0x29, 0x07, 0xC9, 0x07, 0xF0, 0x08,
    0xAA, 0xBD, 0x4E, 0x99, 0xC5, 0x19, 0xD0, 0x1C,
    0xA2, 0x17, 0xA0, 0x02, 0x20, 0x47, 0xAB, 0xA5,
    0x17, 0x29, 0x07, 0x18, 0x65, 0x19, 0xC9, 0x07,
    0x90, 0x06, 0x38, 0xE9, 0x07, 0x4C, 0x2A, 0x99,
    0xAA, 0xBD, 0x4E, 0x99, 0x85, 0x19, 0x60, 0x00,
    0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x02,
    0x02, 0x03, 0x04, 0x04, 0x05, 0x05, 0x05, 0x05,
]

# RGB values for the NES palette
# Taken from https://meatfighter.com/nintendotetrisai/#Coloring_Tetriminos
NES_PALETTE = [
    (0x7C,0x7C,0x7C), (0x00,0x00,0xFC), (0x00,0x00,0xBC), (0x44,0x28,0xBC),
    (0x94,0x00,0x84), (0xA8,0x00,0x20), (0xA8,0x10,0x00), (0x88,0x14,0x00),
    (0x50,0x30,0x00), (0x00,0x78,0x00), (0x00,0x68,0x00), (0x00,0x58,0x00),
    (0x00,0x40,0x58), (0x00,0x00,0x00), (0x00,0x00,0x00), (0x00,0x00,0x00),
    (0xBC,0xBC,0xBC), (0x00,0x78,0xF8), (0x00,0x58,0xF8), (0x68,0x44,0xFC),
    (0xD8,0x00,0xCC), (0xE4,0x00,0x58), (0xF8,0x38,0x00), (0xE4,0x5C,0x10),
    (0xAC,0x7C,0x00), (0x00,0xB8,0x00), (0x00,0xA8,0x00), (0x00,0xA8,0x44),
    (0x00,0x88,0x88), (0x00,0x00,0x00), (0x00,0x00,0x00), (0x00,0x00,0x00),
    (0xF8,0xF8,0xF8), (0x3C,0xBC,0xFC), (0x68,0x88,0xFC), (0x98,0x78,0xF8),
    (0xF8,0x78,0xF8), (0xF8,0x58,0x98), (0xF8,0x78,0x58), (0xFC,0xA0,0x44),
    (0xF8,0xB8,0x00), (0xB8,0xF8,0x18), (0x58,0xD8,0x54), (0x58,0xF8,0x98),
    (0x00,0xE8,0xD8), (0x78,0x78,0x78), (0x00,0x00,0x00), (0x00,0x00,0x00),
    (0xFC,0xFC,0xFC), (0xA4,0xE4,0xFC), (0xB8,0xB8,0xF8), (0xD8,0xB8,0xF8),
    (0xF8,0xB8,0xF8), (0xF8,0xA4,0xC0), (0xF0,0xD0,0xB0), (0xFC,0xE0,0xA8),
    (0xF8,0xD8,0x78), (0xD8,0xF8,0x78), (0xB8,0xF8,0xB8), (0xB8,0xF8,0xD8),
    (0x00,0xFC,0xFC), (0xF8,0xD8,0xF8), (0x00,0x00,0x00), (0x00,0x00,0x00),
]

def level_palette(level):
    """
    given a level from 0 to 255, return the level's colors as a list of three
    RGB values in the same order that the game does (white, color1, color2).
    """
    level %= 256 # rebirth protection lol
    index = level % 10
    if level >= 138:
        index = level % 64
    # only the bottom 6 bits are used for the palette
    color_values = [c % 64 for c in COLOR_TABLE[4*index+1:4*index+4]]
    return [NES_PALETTE[c] for c in color_values]
